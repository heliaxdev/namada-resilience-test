name: Run antithesis daily (cron)

on:
  schedule:
    - cron: "0 1 * * *"

jobs:
  daily:
    runs-on: [ubuntu-latest]
    timeout-minutes: 1440
    strategy:
      fail-fast: false
      matrix:
        runs:
          - namada: "main"
            masp_indexer: "master"
            workload: "master"
            check: "master"
            duration: 14400
          - namada: "v101.1.1"
            masp_indexer: "v1.3.0"
            workload: "master"
            check: "master"
            duration: 14400
    env:
      NAMADA_GENESIS_IMAGE: "ghcr.io/heliaxdev/nrt-namada-genesis:${{ matrix.runs.namada }}"
      NAMADA_IMAGE: "ghcr.io/heliaxdev/nrt-namada:${{ matrix.runs.namada }}"
      MASP_INDEXER_IMAGE_PREFIX: "ghcr.io/heliaxdev/nrt-masp-indexer"
      MASP_INDEXER_IMAGE_TAG: ${{ matrix.runs.masp_indexer }}
      WORKLOAD_IMAGE: "ghcr.io/heliaxdev/nrt-workload:${{ matrix.runs.workload }}"
      CHECK_IMAGE: "ghcr.io/heliaxdev/nrt-check:${{ matrix.runs.check }}"
      TEST_TIME_SEC: ${{ matrix.runs.duration }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-compose-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-compose-
      - name: Docker compose build
        run:  docker compose -f config/docker-compose.yml build
      - name: Generate random number for the test seed
        run: echo "TEST_SEED=$RANDOM" >> $GITHUB_ENV
      - name: Run test
        run: ./run.sh
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ matrix.runs.namada }}
          path: test-*.log
